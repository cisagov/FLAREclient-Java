
objects:
- apiVersion: v1
  kind: Template
  metadata:
    name: deployment-config-template
    metadata:
      name: flareclient-mongodb
  spec:
      replicas: 1
      selector:
        name: flareclient-mongodb
      strategy:
        type: Rolling
        rollingParams:
      template:
        metadata:
          labels:
            name: flareclient-mongodb
        spec:
          containers:
          - env:
            #- name: MONGODB_USER
             # valueFrom:
             #   secretKeyRef:
             #     name: flareclient-mongodb
             #     key: username
           # - name: MONGODB_PASSWORD
            #  valueFrom:
            #    secretKeyRef:
            #      name: flareclient-mongodb
            #      key: password
            imagePullPolicy: Always
            name: flareclient-mongodb
            image: ${DOCKER_REPO_URL}/${IMAGE_NAMESPACE}/flareclient-mongodb:${IMAGE_VERSION}
          serviceAccountName: "database-sa"
          imagePullSecrets:
            - name: artifactory-puller
      triggers:
      - type: ConfigChange

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: flareclient
    spec:
      replicas: 1
      selector:
        name: flareclient
      strategy:
        type: Rolling
        rollingParams:
      template:
        metadata:
          labels:
            name: flareclient
        spec:
          containers:
          - env:
            - name: INIT_USERS
              value: "true"
            - name: LOG_LEVEL
              value: "debug"
            - name: LOG_LEVEL_SPRING
              value: "warn"
            - name: LOG_LEVEL_HIBERNATE
              value: "warn"
            - name: SECRETS_DIR
              value: "/mnt/secrets/"
            - name: VERIFY_HOST
              value: "false"
            - name: KEYSTORE_PASS
              valueFrom:
                secretKeyRef:
                  name: flareclient
                  key: keystore_password
            - name: TRUSTSTORE_PASS
              valueFrom:
                secretKeyRef:
                  name: flareclient
                  key: truststore_password
            - name: KEYSTORE_ALIAS
              valueFrom:
                secretKeyRef:
                  name: flareclient
                  key: keystore_alias
            - name: FLARE_CLIENT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: flareclient
                  key: username
            - name: FLARE_CLIENT_PASS
              valueFrom:
                secretKeyRef:
                  name: flareclient
                  key: password
            - name: FLARE_CLIENT_API_USERNAME
              valueFrom:
                secretKeyRef:
                  name: flareclient
                  key: api_username
            - name: FLARE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: flareclient
                  key: secret
            - name: FLARE_CLIENT_DB_SVC_HOST
              value: flareclient-mongodb.${NAMESPACE}.svc
            - name: FLARE_CLIENT_DB_SVC_PORT
              value: "3310"
            - name: FLARE_CLIENT_DB_USER
              valueFrom:
                secretKeyRef:
                  name: flareclient-mongodb
                  key: username
            - name: FLARE_CLIENT_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: flareclient-mongodb
                  key: password
            - name: FLARE_CLIENT_UI_SVC_HOST
              value: flareclient-ui.${NAMESPACE}.svc
            - name: FLARE_CLIENT_UI_SVC_PORT
              value: "8443"
            - name: DSB_USERNAME
              value: "system"
            - name: DSB_PASS
              value: "manager"
            - name: DSB_SVC_HOST
              value: dsb-mock.${NAMESPACE}.svc
            - name: DSB_SVC_PORT
              value: "5673"
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: flareclient
                  key: api_key
            - name: API_HASH
              valueFrom:
                secretKeyRef:
                  name: flareclient
                  key: api_key_hash
            - name: ORCHESTRATOR_SVC_HOST
              value: orchestrator.${NAMESPACE}.svc
            - name: ORCHESTRATOR_SVC_PORT
              value: "8101"
            imagePullPolicy: Always
            name: flareclient
            image: ${DOCKER_REPO_URL}/${IMAGE_NAMESPACE}/flareclient:${IMAGE_VERSION}
            volumeMounts:
              - name: secrets
                mountPath: /mnt/secrets
                readOnly: true
          serviceAccountName: "jboss-sa"
          initContainers:
            - name: wait-flareclient-mongodb
              image: ${DOCKER_REPO_URL}/alpine/alpine:3.6
              command: ["sh", "-c", "until nc -z -w 2 $(SVC_HOST) $(SVC_PORT) && echo host ready; do sleep 2; done"]
              env:
                - name: SVC_HOST
                  value: "flareclient-mongodb"
                - name: SVC_PORT
                  value: "3310"
          volumes:
            - name: secrets
              secret:
                secretName: flareclient
                items:
                  - key: flareclient_jks
                    path: flareclient_ks.jks
                  - key: truststore_jks
                    path: ca.jks
          imagePullSecrets:
            - name: artifactory-puller
      triggers:
      - type: ConfigChange
parameters:
  - name: NAMESPACE
    displayName: Openshift namespace (project)
    description: Openshift namespace (project) this application resides in
    required: true
  - name: IMAGE_NAMESPACE
    displayName: Docker image namespace
    description: The docker namespace that the image belongs to
    required: true
  - name: IMAGE_VERSION
    displayName: Image Version
    description: Docker image version
    required: true
  - name: DOCKER_REPO_URL
    displayName: Docker Repo URL
    description: Docker repository URL
    required: true
